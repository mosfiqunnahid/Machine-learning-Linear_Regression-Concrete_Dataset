# -*- coding: utf-8 -*-
"""EX-3_Concrete_Dataset(LinearRegression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15mwAidIZaGWe1yIUfeT_FDbUPT1Vl8Zs
"""

import numpy as np
import pandas as pd
from sklearn import metrics  
import matplotlib.pyplot as plt 
import seaborn as sns; sns.set() 
import seaborn as seabornInstance 
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

data = pd.read_excel('/content/Concrete_Data.xls')
data

g = sns.pairplot(data)
g = g.map(plt.scatter)
g.fig.set_size_inches(50,50)

corr = data.corr()
mask = np.triu(np.ones_like(corr, dtype=np.bool))
f, ax = plt.subplots(figsize=(8, 8))
cmap = sns.diverging_palette(220, 10, as_cmap=True)
sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,
            square=True, linewidths=.5, cbar_kws={"shrink": .5})

data = data.iloc[:,:].values
data = data[:,:]
data.shape

x=data[:,[0,1,3,4,8]]
y=data[:,8]
print(data.shape)
print(x)
print(y)

X_train, X_test, y_train, y_test = train_test_split(x, y,shuffle=True, test_size=0.2)

regressor = LinearRegression()  
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

y_pred

df = pd.DataFrame({'Actual': y_test.flatten(),'Predicted':y_pred.flatten()})
df

plt.scatter(y_pred, y_test)

metrics.r2_score(y_test, y_pred)

plt.plot(data[:,8])

plt.plot(data[:,[0,1,3,4,8]])

ax = sns.heatmap(x)